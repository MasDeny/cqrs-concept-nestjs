# connection settings
# connect to MongoDB using the following URL
mongo-url = "mongodb://mongo:27017/koding?replicaSet=koding-replication"
# connect to the Elasticsearch REST API at the following node URLs
elasticsearch-urls = ["http://elasticsearch:9200"]
# frequently required settings
# if you need to seed an index from a collection and not just listen and sync changes events
# you can copy entire collections or views from MongoDB to Elasticsearch
direct-read-namespaces = ["koding.postdocuments","koding.userdocuments"]
# if you want to use MongoDB change streams instead of legacy oplog tailing use change-stream-namespaces
# change streams require at least MongoDB API 3.6+
# if you have MongoDB 4+ you can listen for changes to an entire database or entire deployment
# in this case you usually don't need regexes in your config to filter collections unless you target the deployment
# to listen to an entire db use only the database name.  For a deployment use an empty string.
change-stream-namespaces = ["koding.postdocuments","koding.userdocuments"]
# additional settings
# compress requests to Elasticsearch
gzip = true
# generate indexing statistics
stats = true
# index statistics into Elasticsearch
index-stats = true
# use 4 go routines concurrently pushing documents to Elasticsearch
elasticsearch-max-conns = 4
# propogate dropped collections in MongoDB as index deletes in Elasticsearch
dropped-collections = false
# propogate dropped databases in MongoDB as index deletes in Elasticsearch
dropped-databases = false
# in Elasticsearch with a newer version. Elasticsearch is preventing the old docs from overwriting new ones.
replay = false
# resume processing from a timestamp saved in a previous run
resume = false
# do not validate that progress timestamps have been saved
resume-write-unsafe = true
# override the name under which resume state is saved
resume-name = "default"
# use a custom resume strategy (tokens) instead of the default strategy (timestamps)
# tokens work with MongoDB API 3.6+ while timestamps work only with MongoDB API 4.0+
resume-strategy = 1
# print detailed information including request traces
verbose = true
index-as-update = false
index-oplog-time = false
index-files = false
file-highlighting = false
# elasticsearch-user = "elastic"
# elasticsearch-password = "{elasticsearch-password}"
[[mapping]]
namespace = "koding.postdocuments"
index = "koding-post"
type = "_doc"

[[mapping]]
namespace = "koding.userdocuments"
index = "koding-user"
type = "_doc"

[[script]]
namespace = "koding.postdocuments"
script = """
module.exports = function(doc) {
var newdoc = {
    _id: doc._id,
    title : doc.title,
    boardType: doc.boardType,
    writerNickname: doc.writerNickname,
    tags: doc.tags,
    htmlContent: doc.htmlContent,
    markdownContent: doc.markdownContent,
    imageUrls: doc.imageUrls,
    createdAt: doc.createdAt,
    readCount: doc.readCount,
    likeCount: doc.likeCount,
    commentCount: doc.commentCount,
    scrapCount: doc.scrapCount
  }
  return newdoc;
}
"""

[[script]]
namespace = "koding.userdocuments"
script = """
module.exports = function(doc) {
var newdoc = {
    _id: doc._id,
    nickname: doc.nickname,
    avatarUrl: doc.avatarUrl
  }
  return newdoc;
}
"""