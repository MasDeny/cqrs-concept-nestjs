version: "3"

services:
  koding:
    build: .
    ports:
      - "3001:3001"
    depends_on:
      - elasticsearch-mapping-init
      - redis
      - mysql
    links:
      - elasticsearch
      - redis
      - mysql

  mysql:
    image: mysql:8.0.28
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=1111
      - MYSQL_DATABASE=koding
      - MYSQL_USER=koding-user
      - MYSQL_PASSWORD=1111
      - TZ=Asia/Seoul
    command: # 명령어 실행
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./mysql/db:/var/lib/mysql

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.0
    volumes:
      - ./logstash/mysql-connector-java-8.0.28.jar:/usr/share/logstash/mysql-connector-java-8.0.28.jar
      - ./logstash/pipelines.yml/:/usr/share/logstash/config/pipelines.yml
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
    ports:
      - "5044:5044"
    depends_on:
      - mysql
      - elasticsearch
    links:
      - mysql
      - elasticsearch

  elasticsearch:
    build: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    #    volumes:
    #      - ./elasticsearch/data:/home/psw/elasticsearch/data


  elasticsearch-mapping-init:
    build: elasticsearch-mapping-init
    links:
      - elasticsearch
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch-mapping-init
    environment:
      - SERVER_PORT=5601
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    links:
      - elasticsearch

  redis:
    image: redis:6.2.6-alpine
    ports:
      - "6379:6379"
#networks:
#  monstache-network:
#    driver: bridge
#  koding-network:
#    driver: bridge